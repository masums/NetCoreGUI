<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<AssemblyName>sfml-system</AssemblyName>
		<RootNamespace>sfml-system</RootNamespace>
		<Configurations>Debug;Release;_WINDOWS_;_LINUX_;_OSX_</Configurations>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>

	<PropertyGroup>
		<IsWindows>False</IsWindows>
		<IsOSX>False</IsOSX>
		<IsAndroid>False</IsAndroid>
		<IsLinux>False</IsLinux>
		<Version>2.5.0</Version>
		<Description>Core module of the SFML library</Description>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='_OSX_|AnyCPU'">
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DefineConstants>_OSX_;NETSTANDARD2_0</DefineConstants>
		<IsOSX>True</IsOSX>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='_LINUX_|AnyCPU'">
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DefineConstants>_LINUX_;NETSTANDARD2_0</DefineConstants>
		<IsLinux>True</IsLinux>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='_WINDOWS_|AnyCPU'">
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<DefineConstants>_WINDOWS_;NETSTANDARD2_0</DefineConstants>
		<IsWindows>True</IsWindows>
	</PropertyGroup>

	<!-- Check if we target Windows -->
	<PropertyGroup Condition="($(RuntimeIdentifier.StartsWith('win')) And !$(RuntimeIdentifier.Equals('')) ) Or ( $(OS.Equals('Windows_NT')) And $(RuntimeIdentifier.Equals('')) ) ">
		<!--Replacing '-' and '.' by '_' in Constants because we cannot use those characters in the source files -->
		<DefineConstants>_WINDOWS_;NETSTANDARD2_0</DefineConstants>
		<IsWindows>True</IsWindows>
				<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>

	<!-- Check if we target OSX -->
	<PropertyGroup Condition="($(RuntimeIdentifier.StartsWith('osx')) And !$(RuntimeIdentifier.Equals('')) ) Or ( $([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX))) And $(RuntimeIdentifier.Equals('')) ) ">
		<!--Replacing '-' and '.' by '_' in Constants because we cannot use those characters in the source files -->
		<DefineConstants>_OSX_, $(RuntimeIdentifier.Replace("-","_").Replace(".","_"))</DefineConstants>
		<IsOSX>True</IsOSX>
	</PropertyGroup>

	<!-- Check if we target Android (Doesn't Detect properly for now but is Official: https://docs.microsoft.com/en-us/dotnet/core/rid-catalog) -->
	<!-- (Less check to do because we consider we cannot Dev on Android and anyway there<s no way to detect an Android Platform other then the RID) -->
	<PropertyGroup Condition="$(RuntimeIdentifier.StartsWith('android')) ">
		<!--Replacing '-' and '.' by '_' in Constants because we cannot use those characters in the source files -->
		<DefineConstants>_ANDROID_, $(RuntimeIdentifier.Replace("-","_").Replace(".","_"))</DefineConstants>
		<IsAndroid>True</IsAndroid>
	</PropertyGroup>

	<!-- Check if we target Linux (To many name to check, instead we check if not one of the other OS) -->
	<PropertyGroup Condition=" !$(IsWindows) And !$(IsOSX) And !$(IsAndroid)">
		<!--Replacing '-' and '.' by '_' in Constants because we cannot use those characters in the source files -->
		<DefineConstants>_LINUX_, $(RuntimeIdentifier.Replace("-","_").Replace(".","_"))</DefineConstants>
		<IsLinux>True</IsLinux>
	</PropertyGroup>
	<ItemGroup>
	  <None Update="csfml-system-2.dll">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </None>
	</ItemGroup>

</Project>
